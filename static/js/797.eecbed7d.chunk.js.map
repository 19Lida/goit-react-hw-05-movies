{"version":3,"file":"static/js/797.eecbed7d.chunk.js","mappings":"sSACMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAGAC,EAAW,mCAAG,sGACFL,EAASM,IAAT,uBADE,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAIXC,EAAc,mCAAG,WAAMC,GAAN,yFAELV,EAASM,IAAT,iBAAuBI,IAFlB,uBAEpBH,EAFoB,EAEpBA,KAFoB,kBAIrBA,GAJqB,2CAAH,sDAMdI,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNU,MAAOD,KAHoB,uBACvBL,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,SANmB,2CAAH,sDAYjBM,EAAO,mCAAG,WAAMJ,GAAN,yFACEV,EAASM,IAAT,iBAAuBI,EAAvB,aADF,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKQ,MAFS,2CAAH,sDAIPC,EAAU,mCAAG,WAAMN,GAAN,yFACDV,EAASM,IAAT,iBAAuBI,EAAvB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,sFCMvB,UAnCmB,WACjB,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMV,EAAUS,EAAaf,IAAI,YACjCiB,EAAAA,EAAAA,YAAU,WACQ,KAAZX,GAA8B,OAAZA,IAGtBD,EAAAA,EAAAA,IAAkBC,GAASY,KAAKL,EACjC,GAAE,CAACP,IACJ,IAMMa,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,kBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfT,EAAgB,CAAEV,QAASkB,EAAKE,SAASpB,QAAQqB,QACjDH,EAAKI,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,aACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGjB,EAAOmB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAM5B,IAAM8B,MAAO,CAAEC,KAAMhB,GAAhD,SACGa,EAAMI,SAFFJ,EAAM5B,GADA,QAUxB,C","sources":["components/services/moviesAPI.js","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '8e8c3d98d3e43f50386cf07b0bdc43af',\n  },\n});\nexport const getTrending = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data.results;\n};\nexport const fetchMovieById = async id => {\n  // console.log(id);\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n// export const fetchMovieByQuery = async keyword => {\n//   const response = await instance.get(`/search/movie?query=${keyword}`);\n//   return response.data.results;\n// };\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","import { Link } from 'react-router-dom';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieByQuery } from 'components/services/moviesAPI';\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const keyword = searchParams.get('keyword');\n  useEffect(() => {\n    if (keyword === '' || keyword === null) {\n      return;\n    }\n    fetchMovieByQuery(keyword).then(setMovies);\n  }, [keyword]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ keyword: form.elements.keyword.value });\n    form.reset();\n  };\n  const location = useLocation();\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"keyword\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","fetchMovieById","id","fetchMovieByQuery","keyword","query","getCast","cast","getReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","then","location","useLocation","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","map","movie","to","state","from","title"],"sourceRoot":""}