{"version":3,"file":"static/js/569.8317b594.chunk.js","mappings":"yNA2CA,UAvCiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAQJ,GAFb,OAERK,EAFQ,OAGdN,EAAQM,GAHM,gDAKdC,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDAQfL,GACD,GAAE,CAACH,IAEJ,IAAMS,EAAWX,EAAKY,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACxB,0BACGA,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAI,GACJC,MAAM,SAGV,uBAAIL,KACJ,uBAAIC,MATGZ,EADe,IAc1B,OACE,wBACuB,IAApBS,EAASQ,OACN,2CACAR,GAGT,C,sLCxCKS,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAGAC,EAAW,mCAAG,sGACFL,EAASM,IAAT,uBADE,uBACjBnB,EADiB,EACjBA,KADiB,kBAElBA,EAAKoB,SAFa,2CAAH,qDAIXC,EAAc,mCAAG,WAAM1B,GAAN,yFAELkB,EAASM,IAAT,iBAAuBxB,IAFlB,uBAEpBK,EAFoB,EAEpBA,KAFoB,kBAIrBA,GAJqB,2CAAH,sDAMdsB,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNQ,MAAOD,KAHoB,uBACvBvB,EADuB,EACvBA,KADuB,kBAMxBA,EAAKoB,SANmB,2CAAH,sDAYjBrB,EAAO,mCAAG,WAAMJ,GAAN,yFACEkB,EAASM,IAAT,iBAAuBxB,EAAvB,aADF,uBACbK,EADa,EACbA,KADa,kBAEdA,EAAKP,MAFS,2CAAH,sDAIPgC,EAAU,mCAAG,WAAM9B,GAAN,yFACDkB,EAASM,IAAT,iBAAuBxB,EAAvB,aADC,uBAChBK,EADgB,EAChBA,KADgB,kBAEjBA,EAAKoB,SAFY,2CAAH,qD","sources":["components/CastPage.jsx","components/services/moviesAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'components/services/moviesAPI';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await getCast(id);\n        setCast(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const elements = cast.map(({ id, name, character, profile_path }) => (\n    <li key={id}>\n      {profile_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          alt=\"\"\n          width=\"200\"\n        ></img>\n      )}\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  ));\n\n  return (\n    <ul>\n      {elements.length === 0\n        ? \"We don't have any reviews for this movie\"\n        : elements}\n    </ul>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '8e8c3d98d3e43f50386cf07b0bdc43af',\n  },\n});\nexport const getTrending = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data.results;\n};\nexport const fetchMovieById = async id => {\n  // console.log(id);\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n// export const fetchMovieByQuery = async keyword => {\n//   const response = await instance.get(`/search/movie?query=${keyword}`);\n//   return response.data.results;\n// };\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCast","id","useParams","useEffect","fetchCast","getCast","data","console","log","message","elements","map","name","character","profile_path","src","alt","width","length","instance","axios","baseURL","params","api_key","getTrending","get","results","fetchMovieById","fetchMovieByQuery","keyword","query","getReviews"],"sourceRoot":""}