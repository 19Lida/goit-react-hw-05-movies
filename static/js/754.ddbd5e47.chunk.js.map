{"version":3,"file":"static/js/754.ddbd5e47.chunk.js","mappings":"yNAuCA,UAlCoB,WAClB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAWJ,GAFb,OAEXK,EAFW,OAGjBN,EAAWM,GAHM,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBL,GACD,GAAE,CAACH,IAEJ,IAAMS,EAAWX,EAAQY,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,2BACE,wBAAKD,KACL,uBAAIC,MAFGZ,EADkB,IAO7B,OACE,+BACE,wBACuB,IAApBS,EAASI,OACN,2CACAJ,KAIX,C,sLCpCKK,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAGAC,EAAW,mCAAG,sGACFL,EAASM,IAAT,uBADE,uBACjBf,EADiB,EACjBA,KADiB,kBAElBA,EAAKgB,SAFa,2CAAH,qDAIXC,EAAc,mCAAG,WAAMtB,GAAN,yFAELc,EAASM,IAAT,iBAAuBpB,IAFlB,uBAEpBK,EAFoB,EAEpBA,KAFoB,kBAIrBA,GAJqB,2CAAH,sDAMdkB,EAAiB,mCAAG,WAAMC,GAAN,yFACRV,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNQ,MAAOD,KAHoB,uBACvBnB,EADuB,EACvBA,KADuB,kBAMxBA,EAAKgB,SANmB,2CAAH,sDAYjBK,EAAO,mCAAG,WAAM1B,GAAN,yFACEc,EAASM,IAAT,iBAAuBpB,EAAvB,aADF,uBACbK,EADa,EACbA,KADa,kBAEdA,EAAKsB,MAFS,2CAAH,sDAIPvB,EAAU,mCAAG,WAAMJ,GAAN,yFACDc,EAASM,IAAT,iBAAuBpB,EAAvB,aADC,uBAChBK,EADgB,EAChBA,KADgB,kBAEjBA,EAAKgB,SAFY,2CAAH,qD","sources":["components/ReviewsPages.jsx","components/services/moviesAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from 'components/services/moviesAPI';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await getReviews(id);\n        setReviews(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul>\n        {elements.length === 0\n          ? \"We don't have any reviews for this movie\"\n          : elements}\n      </ul>\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '8e8c3d98d3e43f50386cf07b0bdc43af',\n  },\n});\nexport const getTrending = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data.results;\n};\nexport const fetchMovieById = async id => {\n  // console.log(id);\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n};\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n// export const fetchMovieByQuery = async keyword => {\n//   const response = await instance.get(`/search/movie?query=${keyword}`);\n//   return response.data.results;\n// };\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","getReviews","data","console","log","message","elements","map","author","content","length","instance","axios","baseURL","params","api_key","getTrending","get","results","fetchMovieById","fetchMovieByQuery","keyword","query","getCast","cast"],"sourceRoot":""}